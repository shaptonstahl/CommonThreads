{
    "contents" : "#' Checks to see if the elements of one vector/array are contained\n#' in another vector/array\n#' \n#' This is an aggregation of the \"%in%\" function.\n#'\n#' @param x vector or coercible to one\n#' @param y vector or coercible to one\n#' @return logical singleton\n#' @export\n#' @seealso \\code{\\link{CommonThreads}}\n#' @author Stephen R. Haptonstahl \\email{srh@@haptonstahl.org}\n#' @examples\n#' is.subset(1:3, 1:5)  # returns TRUE\n#' is.subset(1:5, 1:3)  # returns FALSE\n#' is.subset(array(1:9, dim=c(3,3)), c(1:100))  # returns TRUE\n#' is.subset(matrix(1:200, ncol=2), array(1:125, dim=c(5,5,5)))  # returns FALSE\nis.subset <- function(x, y) {\n  # Guardians\n  stopifnot(is(x, \"vector\"),\n            is(y, \"vector\")\n  )\n  \n  # deal with default and missing values\n  \n  # perform the function\n  out <- all(x %in% y)\n  # prepare and return the output\n  return(out)\n}\n",
    "created" : 1369708756893.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1612869052",
    "id" : "DB462577",
    "lastKnownWriteTime" : 1369709259,
    "path" : "~/GitHub/CommonThreads/dev/CommonThreads/R/is_subset.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}